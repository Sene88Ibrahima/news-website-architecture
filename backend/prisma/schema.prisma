// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User avec 3 r√¥les : VISITOR, EDITOR, ADMIN
model User {
  id        String      @id @default(cuid())
  username  String      @unique
  email     String      @unique
  password  String
  role      Role        @default(VISITOR)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  articles  Article[]
  authTokens AuthToken[]

  @@map("users")
}

enum Role {
  VISITOR
  EDITOR
  ADMIN
}

model Category {
  id          String    @id @default(cuid())
  name        String    @unique
  description String?
  articles    Article[]
  createdAt   DateTime  @default(now())

  @@map("categories")
}

model Article {
  id          String   @id @default(cuid())
  title       String
  content     String
  summary     String
  published   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  authorId    String
  categoryId  String
  author      User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@map("articles")
}

model AuthToken {
  id        String   @id @default(cuid())
  token     String   @unique
  type      String   @default("API")
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  expiresAt DateTime?
  userId    String?
  user      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("auth_tokens")
}